First put the card in monitor mode and bring up the interface:
--------------------------------------------------------------
Set Card into Different Modes:  (airmon-ng check kill)
ip link set down wlan0
iw wlan0 set monitor none
ip link set up wlan0


Sniffing:
---------
airodump-ng wlan0  (2.4ghz)
airodump-ng --band a wlan0 (5ghz)
airodump-ng --band abg wlan0 (2.4ghz + 5ghz) Slower due to many more channels to monitor
airodump-ng --bssid <MAC> --channel <#> --write test wlan0  (specific network write packets)

ESSID REgex:
------------
--essid-regex ACME

Remote Sniffing (local wireshark display):
------------------------------------------
ssh root@remotehost tcpdump -U -i wlan0 -w - | wireshark -k -i -

Decrypt WEP Traffic from Captures: 
----------------------------------
airdecap-ng -w <KEY> <capture.cap>


Dealing with Hidden SSID Networks:
----------------------------------
Look at the available networks: 
airdump-ng wlan0

Run on a specific hidden network: 
airodump-ng --bssid <apMAC> --channel <#> wlan0

Deauth the client quickly and then it will probe for the network SSiD: 
aireplay-ng --deauth 4 -a <Network_Mac> -c <targetMac> wlan0


Kismet Usage:
---------------
Just type Kismet to start running and monitoring: 

Filter out known network:
-----------------------------------
In the kismet.conf file you can add in known BSSD's or Prefixes for manufactures
filter_tracker=BSSID(!<Mac1>, <Mac2>)
filte_tracker=SRC
filter_tracker=ANY(!00:30:34::00:00:00/FF:FF:FF:00:00:00)   <-- mask filter prefix 
Or better yet include it from an external source with include=<PATH>/MyOrgList.txt

Export Kismet to google Earch KML: 
gikismet -x <kismet_file.netxml>
gikismet -q "select * from wireless" -o all-nets.kml
gikismet -q "select * from wireless where Encryption='None'" -o unencrypted-nets.kml

Kismapping for HeatMaps: 
kismapping --input capture.xml --output heatmap.jpg --ssid one, two, three

You can also output a KML file for heatmapping on google earth 
